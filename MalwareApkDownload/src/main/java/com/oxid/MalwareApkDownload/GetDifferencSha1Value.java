package com.oxid.MalwareApkDownload;

import com.oxid.malwareapk.dao.SourceBaseDao;
import com.oxid.malwareapk.dao.UserclaasificationDao;
import com.oxid.malwaresample.dao.ApksDao;
import com.oxid.malwaresample.dao.DownStatusDao;
import com.oxid.malwaresample.dao.SampleBaseDao;
import java.io.PrintStream;
import java.util.List;
import org.apache.log4j.Logger;

public class GetDifferencSha1Value {
	static Logger logger = Logger.getLogger(GetDifferencSha1Value.class.getName());

	public static void main(String[] args) {
		//compare ma and samplemanagement database and store the different record between the both
		mstosample();
	}

	public static void mstosample() {
		System.out.println("start Mssha1covertintosample management() ... ");

		String sha1id = getLastSha1();
		long total = getTotalforMs(sha1id);
		long index = 0L;
		int count = 0;
		ApksDao daoapk;
		DownStatusDao downdao;
		while (index < total) {
			setMsDb();
			UserclaasificationDao dao = new UserclaasificationDao();
			dao.setSha1_id(sha1id);
			dao.setLimit(5000);
			List<String> sha1s = dao.getSha1List();
			count++;
			logger.info("the " + count + "th " + " sql loop begin with index -> " + index);
			setSampleDb();
			daoapk = new ApksDao();
			downdao = new DownStatusDao();
			for (String sha1 : sha1s) {
				index += 1L;
				daoapk.setSha1_id(sha1);
				String result = daoapk.getApksSha1();
				if (result == null) {
					try {
						Thread.sleep(1000L);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
					downdao.setSha1_id(sha1);
					downdao.insertDownloadStatus(sha1);
					logger.info("insert " + sha1 + " into download status success");
					sha1id = sha1;
					logger.info("current sha1 is " + sha1id + " for the next loop");
				}
				logger.info("the " + index + "th " + sha1 + " is a test sha1");
			}
		}
	}

	/*
	 * function: set connection parameter for maapprisk database
	 * @param: 
	 * */
	public static void setMsDb() {
		SourceBaseDao.db_user = "admin";
		SourceBaseDao.db_password = "de7cn3g471";
		SourceBaseDao.db_url = "jdbc:mysql://msappriskmysql.newskysecurity.com:3306/0xidStatic?characterEncoding=utf8";
		SourceBaseDao.initDB();
	}

	/*
	 * function: set connection parameter for samplemanagement database
	 * @param: 
	 * */
	public static void setSampleDb() {
		SampleBaseDao.db_user = "root";
		SampleBaseDao.db_password = "passw0rd123";
		SampleBaseDao.db_url = "jdbc:mysql://samplemanagementmysql.newskysecurity.com:3306/sample_management?characterEncoding=utf8";
		SampleBaseDao.initDB();
	}

	/*
	 * function: get the required records from userclassification table
	 * @param: sha1id the specific sha1 value
	 * */
	public static long getTotalforMs(String sha1id) {
		setMsDb();
		UserclaasificationDao daou = new UserclaasificationDao();
		daou.setSha1_id(sha1id);
		long sum = daou.getClassCount();
		return sum;
	}

	/*
	 * function: get the required records from downloadstatus table with not been downloaded
	 * @param: 
	 * */
	public static String getLastSha1() {
		setSampleDb();
		DownStatusDao downdao = new DownStatusDao();
		downdao.setDownloadstatus(0);
		return downdao.getLastSha1();
	}
}
