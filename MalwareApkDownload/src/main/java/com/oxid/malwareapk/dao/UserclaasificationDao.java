package com.oxid.malwareapk.dao;

import com.oxid.util.DB;
import java.util.List;
import org.apache.log4j.Logger;

public class UserclaasificationDao extends SourceBaseDao {
	static Logger logger = Logger.getLogger(UserclaasificationDao.class.getName());
	public static String dynamicDirectoryInPortal;
	public static String mp4_folder;
	public static int consumer_id;
	private String sha1_id;
	private int limit;

	public int getLimit() {
		return this.limit;
	}

	public void setLimit(int limit) {
		this.limit = limit;
	}

	public String getSha1_id() {
		return this.sha1_id;
	}

	public void setSha1_id(String sha1_id) {
		this.sha1_id = sha1_id;
	}

	public List<String> getSha1List() {
		List<String> sha1list = db.easilyGetListOfString(
				"SELECT sha1 FROM riskclassification WHERE sha1 > ? order by sha1 limit ?",
				new Object[] { this.sha1_id, Integer.valueOf(this.limit) });
		if (sha1list == null) {
			logger.error("userclass data is not got");
			System.exit(-1);
		}
		logger.info(sha1list + " is initial sha1list for Maapprisk");
		return sha1list;
	}

	public long getClassCount() {
		long num = db
				.easilyGetIntRs("SELECT COUNT(*) FROM riskclassification WHERE sha1 > ?", new Object[] { this.sha1_id })
				.intValue();
		if (num == 0L) {
			logger.error("more than this sha1 data is zero");
			System.exit(-1);
		}
		logger.info(num + " is totalcount need to compared whether existed!");
		return num;
	}
}
