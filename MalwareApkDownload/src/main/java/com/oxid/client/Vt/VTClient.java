package com.oxid.client.Vt;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.message.BasicNameValuePair;
import org.apache.log4j.Logger;

public class VTClient {
	static Logger logger = Logger.getLogger(VTClient.class);

	public static String getVTReport(String resource, String vt_host, String apikey) {
		StringBuilder url = new StringBuilder(vt_host);
		StringBuilder report = new StringBuilder();
		try {
			HttpClient client = HttpClientBuilder.create().build();
			List<NameValuePair> urlParameters = new ArrayList();
			urlParameters.add(new BasicNameValuePair("resource", resource));
			urlParameters.add(new BasicNameValuePair("apikey", apikey));
			String querystring = URLEncodedUtils.format(urlParameters, "utf-8");
			url.append("?").append(querystring);
			logger.info("URL = " + url.toString());
			HttpGet get = new HttpGet(url.toString());
			get.setHeader("accept", "application/json");
			HttpResponse response = client.execute(get);
			logger.info("Response Code : " + response.getStatusLine().getStatusCode());
			BufferedReader br = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
			String line;
			while ((line = br.readLine()) != null) {
				report = report.append(line);
			}
			br.close();
			return report.toString();
		} catch (Exception e) {
			logger.error(e);
		}
		return null;
	}

	/*
	 * function: download apk file from Virus Total website
	 * @param: resource apk hash value
	 * 		   vt_host VT api url
	 *         apikey VT personal key
	 *         Downfilepath write file directory
	 * */
	public static int downlaodVTFile(String resource, String vt_host, String apikey, String Downfilepath) {
		StringBuilder url = new StringBuilder(vt_host);
		// StringBuilder report = new StringBuilder();
		try {
			HttpClient client = HttpClientBuilder.create().build();
			List<NameValuePair> urlParameters = new ArrayList();
			urlParameters.add(new BasicNameValuePair("apikey", apikey));
			urlParameters.add(new BasicNameValuePair("hash", resource));
			String querystring = URLEncodedUtils.format(urlParameters, "utf-8");
			url.append("?").append(querystring);
			logger.info("URL = " + url.toString());
			HttpGet get = new HttpGet(url.toString());
			get.setHeader("accept", "application/json");
			HttpResponse response = client.execute(get);
			int statuscode = response.getStatusLine().getStatusCode();
			logger.info("Response Code : " + statuscode);
			if (statuscode != 200) {
				return -1;
			}
			StringBuilder filename = new StringBuilder();
			filename.append(Downfilepath);
			filename.append(resource);
			filename.append(".apk");
			// File myFile = new File(filename.toString());

			BufferedInputStream bis = new BufferedInputStream(response.getEntity().getContent());
			BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(new File(filename.toString())));
			int inByte;
			while ((inByte = bis.read()) != -1) {
				bos.write(inByte);
			}
			bis.close();
			bos.close();
		} catch (Exception e) {
			logger.error(e);
		}
		return 0;
	}
}
