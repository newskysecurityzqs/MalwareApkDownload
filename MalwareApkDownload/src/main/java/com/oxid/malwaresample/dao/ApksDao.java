package com.oxid.malwaresample.dao;

import com.oxid.util.DB;
import org.apache.log4j.Logger;

public class ApksDao
  extends SampleBaseDao
{
  static Logger logger = Logger.getLogger(ApksDao.class.getName());
  public static String dynamicDirectoryInPortal;
  public static String mp4_folder;
  public static int consumer_id;
  private String sha1_id;
  
  public String getSha1_id()
  {
    return this.sha1_id;
  }
  
  public void setSha1_id(String sha1_id)
  {
    this.sha1_id = sha1_id;
  }
  
  public int getApksId()
  {
    int num = db.easilyGetIntRs("SELECT apk_id FROM apks where sha1 = ?", new Object[] { this.sha1_id }).intValue();
    if (num == 0)
    {
      logger.error("connection can't be acquired");
      System.exit(-1);
    }
    logger.info(num + " is in apksdao result");
    return num;
  }
  
  public String getApksSha1()
  {
    String sha1str = db.easilyGetStringRs("SELECT sha1 FROM apks where sha1 = ?", new Object[] { this.sha1_id });
    



    logger.info(sha1str + " is result of getting from apks table");
    return sha1str;
  }
  
  public boolean insertDownloadStatus(String sha1id)
  {
    boolean isInsert = db.easilyExecutePreparedStmt("INSERT INTO downloadvtstatus VALUES (?, ?)", new Object[] { sha1id, Integer.valueOf(0) });
    if (!isInsert)
    {
      logger.error("insert a record into status failed");
      System.exit(-1);
    }
    logger.info(isInsert + " is result of down table");
    return isInsert;
  }
}
